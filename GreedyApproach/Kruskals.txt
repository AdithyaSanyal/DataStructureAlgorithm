#include<stdio.h> 

#include<stdlib.h> 

#define MAX 9999 

  

int i,j,n,ne=1,a,b,u,v; 

int min,mincost,parent[20],cost[20][20]; 

  

int find(int i){ 

    while(parent[i]){ 

        i=parent[i]; 

    } 

    return i; 

} 

  

int Union(int i,int j){ 

    if(i!=j){ 

        parent[j]=i; 

        return 1; 

    } 

    return 0; 

} 

  

void main(){ 

printf("\n\tImplementation of Kruskal's algorithm\n"); 

printf("\nEnter the no. of vertices :"); 

scanf("%d",&n); 

printf("\nEnter the cost adjacency matrix:\n"); 

for(i=1;i<=n;i++){ 

        for(j=1;j<=n;j++){ 

            scanf("%d",&cost[i][j]); 

            if(cost[i][j]==0){ 

                cost[i][j]=MAX; 

            } 

        } 

} 

while(ne<n){ 

        for(i=1,min=MAX;i<=n;i++){ 

            for(j=1;j<=n;j++){ 

                if(cost[i][j]<min){ 

                    a=u=i; 

                    b=v=j; 

                    min=cost[i][j]; 

                } 

            } 

        } 

        u=find(u); 

        v=find(v); 

        if(Union(u,v)){ 

            mincost+=min; 

            printf("%d edge %d <--> %d = %d\n",ne++,a,b,min); 

        } 

        cost[a][b]=cost[b][a]=MAX; 

} 

printf("\n\tMinimum cost = %d\n",mincost); 

} 